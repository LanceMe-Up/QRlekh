generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     Int           @id @default(autoincrement())
  username               String
  email                  String        @unique
  phone                  String        @unique
  password               String
  role                   UserRole      @default(USER)
  profileImage           ProfileImage?
  verified               Boolean       @default(false)
  passwordResetRequested Boolean       @default(false)
  refreshToken           String?
  otp                    Otp[]
  qrlekhData             QrlekhData[]
  tagName                TagName[]
}

model ProfileImage {
  id    Int    @id @default(autoincrement())
  image String

  user   User? @relation(fields: [userId], references: [id])
  userId Int?  @unique
}

model Otp {
  id        Int      @id @default(autoincrement())
  code      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  type      OtpType
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
}

model QrlekhData {
  id        Int          @id @default(autoincrement())
  category  String
  knownFor  String
  slug      String       @unique
  image     QrlekhImage?
  location  String
  rating    Int          @default(4)
  name      String
  desc      String
  favourite Boolean      @default(false)
  like      Boolean      @default(false)
  dislike   Boolean      @default(false)

  TagName   TagName? @relation(fields: [tagNameId], references: [id])
  tagNameId Int?

  User   User? @relation(fields: [userId], references: [id])
  userId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model QrlekhImage {
  id    Int    @id @default(autoincrement())
  image String

  QrlekhData   QrlekhData @relation(fields: [qrlekhDataId], references: [id])
  qrlekhDataId Int        @unique
}

model TagName {
  id      Int          @id @default(autoincrement())
  tagName String
  lat     Decimal     @unique
  long    Decimal     @unique
  userId  Int?
  User    User?        @relation(fields: [userId], references: [id])
  qr      QrlekhData[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserRole {
  ADMIN
  USER
  VENDOR
}

enum OtpType {
  EMAIL_VERIFICATION
  PASSWORD_RESET
}
